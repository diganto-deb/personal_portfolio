---
import '@fontsource/inter';
import 'aos/dist/aos.css'; // Import AOS CSS directly
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Diganto Deb Barma - Machine Learning Engineer Portfolio" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="bg-white dark:bg-[#111111] min-h-screen relative text-gray-900 dark:text-white transition-colors duration-300">
    <Navbar />
    <slot />
    <Footer />
    
    <script>
      // Import and initialize AOS
      import AOS from 'aos';
      
      // Initialize AOS with configuration
      document.addEventListener('DOMContentLoaded', () => {
        AOS.init({
          duration: 800,
          once: true,
          offset: 100,
          easing: 'ease-in-out'
        });
      });

      // Check for system preference and stored theme
      const getInitialTheme = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      };

      // Apply theme
      const applyTheme = (theme) => {
        const root = document.documentElement;
        if (theme === 'dark') {
          root.classList.add('dark');
        } else {
          root.classList.remove('dark');
        }
      };

      // Set initial theme
      const theme = getInitialTheme();
      applyTheme(theme);
    </script>
  </body>
</html>